/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthLogoutRouteImport } from './routes/auth/logout'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthenticatedTransactionIndexRouteImport } from './routes/_authenticated/transaction/index'
import { Route as AuthenticatedOverviewIndexRouteImport } from './routes/_authenticated/overview/index'

const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLogoutRoute = AuthLogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthenticatedTransactionIndexRoute =
  AuthenticatedTransactionIndexRouteImport.update({
    id: '/transaction/',
    path: '/transaction/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedOverviewIndexRoute =
  AuthenticatedOverviewIndexRouteImport.update({
    id: '/overview/',
    path: '/overview/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/': typeof AuthIndexRoute
  '/overview': typeof AuthenticatedOverviewIndexRoute
  '/transaction': typeof AuthenticatedTransactionIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth': typeof AuthIndexRoute
  '/overview': typeof AuthenticatedOverviewIndexRoute
  '/transaction': typeof AuthenticatedTransactionIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/': typeof AuthIndexRoute
  '/_authenticated/overview/': typeof AuthenticatedOverviewIndexRoute
  '/_authenticated/transaction/': typeof AuthenticatedTransactionIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/auth/login'
    | '/auth/logout'
    | '/auth/sign-up'
    | '/auth/'
    | '/overview'
    | '/transaction'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/login'
    | '/auth/logout'
    | '/auth/sign-up'
    | '/auth'
    | '/overview'
    | '/transaction'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/auth'
    | '/auth/login'
    | '/auth/logout'
    | '/auth/sign-up'
    | '/auth/'
    | '/_authenticated/overview/'
    | '/_authenticated/transaction/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/logout': {
      id: '/auth/logout'
      path: '/logout'
      fullPath: '/auth/logout'
      preLoaderRoute: typeof AuthLogoutRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_authenticated/transaction/': {
      id: '/_authenticated/transaction/'
      path: '/transaction'
      fullPath: '/transaction'
      preLoaderRoute: typeof AuthenticatedTransactionIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/overview/': {
      id: '/_authenticated/overview/'
      path: '/overview'
      fullPath: '/overview'
      preLoaderRoute: typeof AuthenticatedOverviewIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedOverviewIndexRoute: typeof AuthenticatedOverviewIndexRoute
  AuthenticatedTransactionIndexRoute: typeof AuthenticatedTransactionIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedOverviewIndexRoute: AuthenticatedOverviewIndexRoute,
  AuthenticatedTransactionIndexRoute: AuthenticatedTransactionIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthLogoutRoute: typeof AuthLogoutRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthLogoutRoute: AuthLogoutRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
